{"version":3,"sources":["components/auth/auth-service.js","components/account/Login.js","components/account/Signup.js","components/view-logs/Log.js","components/Home.js","components/account/Logout.js","components/account/Settings.js","components/Create.js","components/fiterByLocation/StateFilter.js","components/fiterByLocation/CountyFilter.js","components/weather/WeatherAvg.js","components/weather/WeatherAudit.js","components/View.js","components/Profile.js","components/ViewProfile.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","state","service","post","then","response","data","loggedin","get","login","username","password","create","info","getDate","year","dayOfYear","profile","seeUser","userId","changeInfo","userInfo","changePass","deleteUser","confirmation","logout","axios","baseURL","process","withCredentials","this","Login","message","user","handleChange","e","preventDefault","setState","target","name","value","handleSubmit","results","localStorage","setItem","JSON","stringify","props","logIt","catch","error","console","log","className","onSubmit","htmlFor","type","style","fontSize","width","placeholder","onChange","Component","Signup","email","phone","gender","maxLength","pattern","selected","disabled","Log","weatherString","genderIcon","weatherIcon","slice","creatorId","male","female","nonbinary","theTag","demo","to","_id","id","test","icon","size","src","alt","weatherType","hideCreator","county","mood","productivity","journal","privateJournal","Home","date","Date","err","testLog","checkIfLoggedIn","getUser","history","push","toggle","prevState","backToTop","window","scrollTo","setError","thing","onClick","arrow","href","rel","Logout","Settings","hideProfile","privateJournalDefault","hideCreatorDefault","oldPhone","oldEmail","oldPass","newPass","confirmDelete","deletePassword","statePiece","isLoggedIn","loggedInUser","Create","moodEmoji","latitude","longitude","messageCss","replace","innerText","setMood","num","emoji","crying","frown","middlin","smile","happiest","createdToday","setTimeout","logCreated","navigator","geolocation","getCurrentPosition","position","coords","rows","cols","checked","StateFilter","filter","states","map","key","CountyFilter","counties","WeatherAvg","reducer","accumulator","currentValue","logs","length","forEach","Math","round","reduce","weather","WeatherAudit","clear","clouds","rain","snow","outlier","View","today","filteredLogs","filteredLogsCopy","genderSearchMessage","yours","day","undefined","stateFiltered","sanitizeDate","dateToLookFor","start","getFullYear","diff","getTimezoneOffset","floor","toString","split","specificDay","Set","filterByState","stateLogs","add","filterByCounty","countyLogs","filterByGender","genderLogs","showLogs","filterState","filterCounty","weatherAudit","defaultLogs","Profile","rawLogs","moodAvg","notToday","block","oldestFirst","makeTheLogs","moodArr","theLogs","month","dayOfMonth","Number","sortByAge","sortedLogs","sort","a","b","ViewProfile","match","params","Navbar","createdLogToday","App","errMessage","testIt","setNewState","setUser","storedUser","parse","getItem","removeItem","getTheUser","userObj","exact","path","render","React","Boolean","location","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e0dd02e.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  // constructor() {\n  //   let service = axios.create({\n  //     baseURL: 'http://localhost:5000/api',\n  //     withCredentials: true\n  //   });\n  //   this.service = service;\n  // }\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = state => {\n    return this.service\n      .post('/signup', { state })\n      .then(response => response.data);\n  };\n\n  loggedin = () => {\n    return this.service.get('/loggedin').then(response => response.data);\n  };\n\n  login = (username, password) => {\n    return this.service\n      .post('/login', { username, password })\n      .then(response => response.data);\n  };\n\n  create = info => {\n    return this.service\n      .post('/log/create', { info })\n      .then(response => response.data);\n  };\n\n  getDate = (year, dayOfYear) => {\n    return this.service\n      .get(`/log/date/${year}/${dayOfYear}`)\n      .then(response => response.data);\n  };\n\n  profile = () => {\n    return this.service\n      .get(`/log/all/my-posts`)\n      .then(response => response.data);\n  };\n\n  seeUser = userId => {\n    return this.service\n      .get(`/log/all/${userId}`)\n      .then(response => response.data);\n  };\n\n  changeInfo = userInfo => {\n    return this.service\n      .post(`/change-info`, { userInfo })\n      .then(response => response.data);\n  };\n\n  changePass = userInfo => {\n    return this.service\n      .post(`/change-password`, { userInfo })\n      .then(response => response.data);\n  };\n\n  deleteUser = confirmation => {\n    return this.service\n      .post(`/delete-user`, { confirmation })\n      .then(response => response.data);\n  };\n\n  logout = () => {\n    return this.service.post('/logout', {}).then(response => response.data);\n  };\n}\nexport default AuthService;\n","import React, { Component } from 'react';\nimport AuthService from '../auth/auth-service';\n\nexport default class Login extends Component {\n  state = {\n    message: null,\n    user: '',\n    username: '',\n    password: ''\n  };\n  service = new AuthService();\n\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    if (!username) {\n      this.setState({\n        message: `You must include a username`\n      });\n    } else if (!password) {\n      this.setState({\n        message: `You must include a password`\n      });\n    } else {\n      this.service\n        .login(username, password)\n        .then(results => {\n          this.setState({\n            username: '',\n            password: '',\n            message: results.message || null\n          });\n\n          if (!results.message) {\n            localStorage.setItem('user', JSON.stringify(results));\n            this.props.logIt(results);\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({\n            message: `Incorrect Username or Password`\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='signup'>\n          <span className='signup-header'>Login</span>\n          <form onSubmit={this.handleSubmit}>\n            <div className='form-piece login-form-piece'>\n              <label htmlFor='username'>Username:</label>\n              <input\n                type='text'\n                style={{ fontSize: '1em', width: '55%' }}\n                name='username'\n                placeholder='Your name...'\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className='form-piece login-form-piece'>\n              <label htmlFor='password'>Password:</label>\n              <input\n                name='password'\n                style={{ fontSize: '1em', width: '55%' }}\n                placeholder='******'\n                type='password'\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className='login-button'>\n              <button className=''>Submit</button>\n            </div>\n          </form>\n          <b className='signup-message'>{this.state.message}</b>\n        </div>\n        <div className='switch-button'>\n          {/* <button className=''>Click to Create an Account</button> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from '../auth/auth-service';\n\nexport default class Signup extends Component {\n  state = {\n    message: null,\n    user: '',\n    username: '',\n    password: '',\n    email: '',\n    phone: '',\n    gender: ''\n  };\n\n  service = new AuthService();\n\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { username, password, gender } = this.state;\n    if (!username) {\n      this.setState({\n        message: `You must include a username`\n      });\n    } else if (!password) {\n      this.setState({\n        message: `You must include a password`\n      });\n    } else if (!gender) {\n      this.setState({\n        message: `You must include a gender`\n      });\n    } else {\n      const state = this.state;\n      this.service\n        .signup(state)\n        .then(results => {\n          this.props.logIt(results);\n        })\n        .catch(error => {\n          this.setState({\n            message: `Username already exists!`\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='signup'>\n          <span className='signup-header'>Create an Account!</span>\n          <form className='signup-form' onSubmit={this.handleSubmit}>\n            <div className='form-pieces'>\n              <div className='form-piece'>\n                <label htmlFor='name'>Your Username:</label>\n                <input\n                  name='username'\n                  maxLength='20'\n                  placeholder='Your name...'\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className='form-piece'>\n                <label htmlFor='password'>Password:</label>\n                <input\n                  name='password'\n                  type='password'\n                  placeholder='Your password...'\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className='form-piece'>\n                <label htmlFor='email'>Email: (optional)</label>\n                <input\n                  name='email'\n                  type='email'\n                  placeholder='Your email...'\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className='form-piece'>\n                <label htmlFor='phone'>Phone: (optional)</label>\n                <input\n                  name='phone'\n                  type='tel'\n                  pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}'\n                  placeholder='867-5309'\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className='form-piece'>\n                <label htmlFor='gender'>What is your gender?</label>\n                <select name='gender' onChange={this.handleChange}>\n                  <option selected disabled>\n                    Choose:\n                  </option>\n                  <option value='male'>Male</option>\n                  <option value='female'>Female</option>\n                  <option value='nonbinary'>Non-binary</option>\n                </select>\n              </div>\n            </div>\n            <div className='signup-button'>\n              <button className=''>Submit</button>\n            </div>\n          </form>\n          <b className='signup-message'>{this.state.message}</b>\n        </div>\n        <div className='switch-button'>\n          {/* <button className=''>Click to Create an Account</button> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faGenderless as nonbinary,\n  faVenus as female,\n  faMars as male\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default function Log(props) {\n  let weatherString;\n  let genderIcon;\n  //AS OF NOW, THE ICONS WILL ONLY SHOW THE DAYTIME IMAGES, FOR SIMPLICITY. THIS CAN BE CHANGED AT THE WEATHERSTRING VARIABLE\n  if (props.log.weatherIcon) {\n    weatherString = `http://openweathermap.org/img/wn/${props.log.weatherIcon.slice(\n      0,\n      -1\n    )}d@2x.png`;\n  } else weatherString = '';\n\n  switch (props.log.creatorId.gender) {\n    case 'male':\n      genderIcon = male;\n      break;\n    case 'female':\n      genderIcon = female;\n      break;\n    default:\n      genderIcon = nonbinary;\n      break;\n  }\n\n  let theTag = props.log.creatorId.username;\n\n  if (!props.log.demo) {\n    theTag = (\n      <Link to={`/view-profile/${props.log.creatorId._id}`}>\n        {props.log.creatorId.username}\n      </Link>\n    );\n  }\n\n  if (\n    props.log.creatorId.username ===\n      'This user has decided to keep their name private' ||\n    props.id === props.log.creatorId._id\n  ) {\n    theTag = props.log.creatorId.username;\n  }\n\n  return (\n    <div className={props.test ? 'mock-log' : 'log'}>\n      <div className='log-head '>\n        <span>\n          <h3 className='name-and-gender'>\n            <div className='name-box'>\n              {props.id === props.log.creatorId._id ? <i>~(You!)~</i> : theTag}\n            </div>\n            <div className='gender'>\n              <FontAwesomeIcon icon={genderIcon} size='2x' />\n            </div>\n            <div className='weather-box'>\n              <span>\n                <img\n                  className='weather-icon'\n                  src={weatherString}\n                  alt={props.log.weatherType}\n                />\n              </span>\n              <p> {props.log.weatherType}</p>\n            </div>\n          </h3>\n          {props.log.creatorId.username !==\n            'This user has decided to keep their name private' &&\n            props.log.hideCreator && (\n              <i>You have hidden your name for this log</i>\n            )}\n        </span>\n      </div>\n      <h2>\n        {props.log.county} County, {props.log.state}\n      </h2>\n      <div className='mood-and-productivity'>\n        <h3>\n          Mood: <p>{props.log.mood}</p>\n        </h3>\n        <h3>\n          Productivity: <p>{props.log.productivity}</p>\n        </h3>\n      </div>\n      <h4>Log: {props.log.journal}</h4>\n      {props.log.journal !== 'This log is set to private' &&\n        props.log.privateJournal && <i>You made this log private</i>}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport AuthService from './auth/auth-service';\n\nimport Login from './account/Login';\nimport Signup from './account/Signup';\n\nimport Log from './view-logs/Log';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLevelUpAlt as arrow } from '@fortawesome/free-solid-svg-icons';\n\n// import video from './video/Pexels Videos 1893623.mp4';\n\nimport '../css/homepage.css';\n\nexport default class Home extends Component {\n  state = {\n    date: new Date(),\n    message: 'This is the Home Page',\n    err: false,\n    signup: false,\n    testLog: {\n      id: '1335',\n      genderIcon: 'female',\n      weatherType: 'Clear',\n      weatherIcon: '01n',\n      hideCreator: false,\n      state: 'Washington',\n      county: 'King',\n      mood: '4',\n      productivity: '3',\n      journal:\n        'Overall, today felt like a good day. I was able to get most of what I wanted done. Enjoyed the bright skies!',\n      privateJournal: false,\n      creatorId: {\n        username: 'Jane Doe',\n        gender: 'female',\n        _id: null\n      },\n      demo: true\n    }\n  };\n\n  service = new AuthService();\n\n  componentDidMount() {\n    if (this.props.err && !this.state.err) {\n      this.setState({\n        message: 'You already created a log today!',\n        err: true\n      });\n    }\n    this.props.setError(null);\n\n    return <div>this.state.message</div>;\n  }\n\n  checkIfLoggedIn = () => {\n    this.service\n      .loggedin()\n      .then(results => {})\n      .catch(error => console.log(error));\n  };\n\n  logIt = results => {\n    this.props.getUser(results);\n    this.props.history.push('/profile');\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      signup: !prevState.signup\n    }));\n  };\n\n  backToTop = () => {\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    let toggle;\n    let thing;\n    this.state.signup\n      ? (toggle = 'Go back to Login')\n      : (toggle = 'or, Create an Account Now!');\n    this.state.signup ? (thing = 'card flipped') : (thing = 'card');\n\n    return (\n      <div>\n        <div className='homepage-top'>\n          <div className='homepage-greet'>\n            <h1>SUNLOGS</h1>\n            <p>How much does weather affect your life?</p>\n          </div>\n          <div className='signup-login-container'>\n            <section className='container'>\n              <div className={thing}>\n                <div className='front card-div'>\n                  {' '}\n                  <Login logIt={this.logIt} />\n                </div>\n                <div className='back card-div'>\n                  <Signup logIt={this.logIt} />\n                </div>\n              </div>\n            </section>\n            <button className='create-button' onClick={this.toggle}>\n              {toggle}\n            </button>\n          </div>\n        </div>\n        <div className='homepage-separation'></div>\n        <div className='homepage-sad'>\n          <h2>Did you know:</h2>\n          <h4>\n            Over 3 MILLION Americans suffer from Seasonal Affective Disorder, or\n            SAD, every year\n          </h4>\n          <p>\n            SAD can affect nearly every aspect of a person's life, from work, to\n            relationships, to personal health. <br />\n            It was this reason that Sunlogs was created\n          </p>\n        </div>\n        <div className='homepage-sunlog'>\n          <div className='sunlog-description'>\n            <h2>What is Sunlogs?</h2>\n            <p>\n              Sunlogs is a way to record your daily <strong>Mood</strong> and\n              how <strong>Productive</strong> you thought you were.{' '}\n            </p>\n            <p>\n              You can also create a journal for any feelings you might want to\n              jot down.\n            </p>{' '}\n            <p>\n              These logs are then tied to the weather in your county, and will\n              compare correlate mood respectively\n            </p>\n          </div>\n          <div className='sunlog-example'>\n            <Log log={this.state.testLog} test={true} />\n            <h4>(Your logs can be as private as you want them to be)</h4>\n          </div>\n        </div>\n        <div>\n          <h1>CREATE AN ACCOUNT AND SEE!</h1>\n          <div className='footer'>\n            <div>\n              <button className='footer-button' onClick={this.backToTop}>\n                Back to Top\n                <FontAwesomeIcon icon={arrow} size='2x' />\n              </button>\n            </div>\n            <div className='footer-contact'>\n              <p>Created by Mike Troianello</p>\n              {/* <p>Have any questions/ concerns about the website?</p> */}\n              <p>\n                Contact me at{' '}\n                <a href='mailto:mike@troianello.co'> mike@troianello.co</a>\n              </p>\n              <p>\n                Visit my personal website{' '}\n                <a\n                  href='http://troianello.co'\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  troianello.co\n                </a>\n              </p>\n            </div>\n            <div className='footer-logo'>\n              <h1 className='mt-logo'>Mt</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from '../auth/auth-service';\n\nexport default class Logout extends Component {\n  service = new AuthService();\n\n  componentDidMount() {\n    this.service.logout().then(results => {\n      this.props.logout();\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    return <div></div>;\n  }\n}\n","import React, { Component } from 'react';\n\nimport AuthService from '../auth/auth-service';\n\nexport default class Settings extends Component {\n  state = {\n    message: null,\n    hideProfile: false,\n    privateJournalDefault: false,\n    hideCreatorDefault: false,\n    oldPhone: null,\n    phone: null,\n    oldEmail: null,\n    email: null,\n    oldPass: null,\n    newPass: null,\n    confirmDelete: null,\n    deletePassword: null,\n    id: null\n  };\n\n  service = new AuthService();\n\n  componentDidMount() {\n    if (this.props.loggedInUser) {\n      const {\n        email,\n        hideCreatorDefault,\n        hideProfile,\n        phone,\n        privateJournalDefault,\n        id\n      } = this.props.loggedInUser;\n\n      this.setState({\n        hideProfile: hideProfile,\n        privateJournalDefault: privateJournalDefault,\n        hideCreatorDefault: hideCreatorDefault,\n        oldPhone: phone,\n        oldEmail: email,\n        id: id\n      });\n    } else {\n      this.service.loggedin().then(response => {\n        this.setState({\n          hideProfile: response.hideProfile,\n          privateJournalDefault: response.privateJournalDefault,\n          hideCreatorDefault: response.hideCreatorDefault,\n          oldPhone: response.phone,\n          oldEmail: response.email,\n          id: response.id\n        });\n      });\n    }\n  }\n\n  toggle = e => {\n    let statePiece = e.target.name;\n    this.setState(prevState => ({\n      [statePiece]: !prevState[statePiece]\n    }));\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  changeInfo = () => {\n    let state = this.state;\n    this.service.changeInfo(state).then(results => {\n      this.props.isLoggedIn(results);\n      this.props.history.push('/profile');\n    });\n  };\n\n  changePass = () => {\n    this.service.changePass(this.state).then(results => {\n      this.props.isLoggedIn(results);\n      this.props.history.push('/');\n    });\n  };\n\n  deleteUser = () => {\n    this.service.deleteUser(this.state.confirmDelete).then(results => {\n      this.props.history.push('/');\n    });\n  };\n\n  render() {\n    return (\n      <div className='settings-top'>\n        <div className='settings'>\n          <h1>Your Settings</h1>\n          <i>\n            Note: pressing any of the save buttons will update all fields you\n            have changed. <br />\n            They are placed in each section for convenience\n          </i>\n          <div className='settings-change-preferences'>\n            <h1>Preferences</h1>\n            <div>\n              <h3>Hide your profile</h3>\n              <p>\n                This makes sure people will not be able to view your profile.\n              </p>\n              <p className='settings-aside'>\n                (They still can see your name on your logs, if you choose to not\n                hide them)\n              </p>\n              <h3>{this.state.hideProfile}</h3>\n              <h4 className={this.state.hideProfile ? 'red' : 'green'}>\n                You currently{' '}\n                {this.state.hideProfile === true && <span>DO NOT </span>}\n                allow others to view your profile\n              </h4>\n              <button\n                className='settings-change-preferences-button'\n                name='hideProfile'\n                onClick={this.toggle}\n              >\n                {this.state.hideProfile ? 'Show' : 'Hide'} profile\n              </button>\n            </div>\n            <div>\n              <h3>Make Journals Private by Default</h3>\n              <h4\n                className={this.state.privateJournalDefault ? 'red' : 'green'}\n              >\n                Your Journals are{' '}\n                {this.state.privateJournalDefault ? 'HIDDEN' : 'shown'} by\n                default\n              </h4>\n              <button\n                className='settings-change-preferences-button'\n                name='privateJournalDefault'\n                onClick={this.toggle}\n              >\n                {this.state.privateJournalDefault ? 'Show' : 'Hide'} by Default\n              </button>\n            </div>\n            <div>\n              <h3>Hide your name by Default</h3>\n              <h4 className={this.state.hideCreatorDefault ? 'red' : 'green'}>\n                Your Journals are{' '}\n                {this.state.hideCreatorDefault ? 'HIDDEN' : 'shown'} by default\n              </h4>\n              <button\n                className='settings-change-preferences-button'\n                name='hideCreatorDefault'\n                onClick={this.toggle}\n              >\n                {this.state.hideCreatorDefault ? 'Show' : 'Hide'} by Default\n              </button>\n            </div>\n            <button\n              className='settings-change-button'\n              onClick={() => this.changeInfo()}\n            >\n              Change Preferences\n            </button>\n          </div>\n          <div className='settings-change-info'>\n            <h1>Change your Account Info</h1>\n            <div>\n              <h3>Your old phone number: {this.state.oldPhone}</h3>\n              <span>Change Phone #</span>\n              <input\n                type='tel'\n                pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}'\n                name='phone'\n                placeholder='+3(141)592-6535'\n                onChange={this.handleChange}\n              />\n            </div>\n            <div>\n              <h3>Your old email: {this.state.oldEmail}</h3>\n              <span>Change email</span>\n              <input\n                type='email'\n                name='email'\n                placeholder='name@email.com'\n                onChange={this.handleChange}\n              />\n            </div>\n            <button\n              className='settings-change-button'\n              onClick={() => this.changeInfo()}\n            >\n              Change Info\n            </button>\n            <div className='settings-change-password'>\n              <h3>Change Password</h3>\n              <span>New Password</span>\n              <input\n                type='password'\n                name='oldPass'\n                placeholder='********'\n                onChange={this.handleChange}\n              />\n              <br />\n              <span>Confirm Password</span>\n              <input\n                type='password'\n                name='newPass'\n                placeholder='********'\n                onChange={this.handleChange}\n              />\n              <br />\n              <button\n                className='settings-change-button'\n                onClick={() => this.changeInfo()}\n              >\n                Change Password\n              </button>\n            </div>\n          </div>\n          <div className='settings-delete'>\n            <h1>Delete Profile</h1>\n            <h4>\n              <span className='red'>WARNING:</span> If you delete your profile,\n              this cannot be undone!\n            </h4>\n            <p className='settings-delete-warning'>\n              <i>\n                Note: <br />\n                if you delete your account, your logs will stay intact,\n                <br />\n                for mood aggregation purposes. <br />\n                All of your journals will be erased, as will the names of the\n                logs.{' '}\n              </i>\n            </p>\n            <span>\n              <b>Type in your Usename Before Deletion</b>\n            </span>\n            <br></br>\n            <input\n              name='confirmDelete'\n              placeholder='make sure this is what you want...'\n              style={{ fontSize: '1em', width: '250px' }}\n              onChange={this.handleChange}\n            />\n            <br />\n            <button className='delete' onClick={this.deleteUser}>\n              DELETE IT!\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from '../components/auth/auth-service';\nimport { Redirect } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFrown as frown,\n  faLaugh as happiest,\n  faSmile as smile,\n  faMeh as middlin,\n  faSadTear as crying\n  // faGrin as grin\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default class Create extends Component {\n  state = {\n    mood: null,\n    moodEmoji: null,\n    productivity: null,\n    journal: null,\n    privateJournal: false,\n    hideCreator: false,\n    latitude: null,\n    longitude: null,\n    err: null,\n    message: null,\n    messageCss: 'red'\n  };\n\n  service = new AuthService();\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.setState({\n        privateJournal: this.props.user.privateJournalDefault,\n        hideCreator: this.props.user.hideCreatorDefault\n      });\n    }\n  }\n\n  handleChange = e => {\n    if (e.target.value) {\n      e.target.value = e.target.value.replace(/[\\r\\n\\v]+/g, '');\n    }\n    this.setState({\n      [e.target.id]: e.target.innerText || e.target.value\n    });\n  };\n\n  setMood = num => {\n    let emoji;\n    switch (num) {\n      case 1:\n        emoji = <FontAwesomeIcon icon={crying} />;\n        break;\n      case 2:\n        emoji = <FontAwesomeIcon icon={frown} />;\n        break;\n      case 3:\n        emoji = <FontAwesomeIcon icon={middlin} />;\n        break;\n      case 4:\n        emoji = <FontAwesomeIcon icon={smile} />;\n        break;\n      default:\n        emoji = <FontAwesomeIcon icon={happiest} />;\n        break;\n    }\n\n    // IF SOMETHING BREAKS, IT IS PROBABLY DUE TO THIS\n    return this.setState({\n      mood: num,\n      moodEmoji: emoji\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.props.createdToday) {\n      this.setState({\n        err: true,\n        message: `You already created a log today!`,\n        messageCss: 'red'\n      });\n      setTimeout(function() {}, 1000);\n    } else if (!this.state.mood) {\n      this.setState({\n        message: `You didn't select your mood`,\n        messageCss: 'red'\n      });\n    } else if (!this.state.productivity) {\n      this.setState({\n        message: `You didn't select your productivity`,\n        messageCss: 'red'\n      });\n    } else {\n      let info = this.state;\n      this.setState(\n        {\n          message: 'Submitting your log',\n          messageCss: 'black'\n        },\n        () => console.log('ABOUT TO SUBMIT', this.state)\n      );\n      this.service\n        .create(info)\n        .then(results => {\n          console.log(results);\n          this.props.logCreated();\n          this.props.history.push('/view');\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({\n            message: `It broke at geolocation`\n          });\n        });\n    }\n  };\n\n  render() {\n    //THIS FINDS LATITUDE AND LONGITUDE\n\n    if (this.state.err) {\n      return <Redirect to='/view' />;\n    }\n\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n\n        this.setState({\n          latitude: latitude,\n          longitude: longitude\n        });\n      });\n    } else {\n      console.log('geolocation IS NOT available');\n    }\n\n    return (\n      <div className='create-log-page'>\n        <div className='create-log'>\n          <h1>Create a Mood Log</h1>\n          <div className='create-mood-box'>\n            <label htmlFor='mood'>\n              What is your mood? {this.state.moodEmoji}\n            </label>\n            <br />\n            <div className='one-through-five'>\n              <FontAwesomeIcon\n                id='mood'\n                className='emotion'\n                icon={crying}\n                size='2x'\n                onClick={() => this.setMood(1)}\n              />\n              <FontAwesomeIcon\n                id='mood'\n                icon={frown}\n                size='2x'\n                onClick={() => this.setMood(2)}\n              />\n              <FontAwesomeIcon\n                id='mood'\n                icon={middlin}\n                size='2x'\n                onClick={() => this.setMood(3)}\n              />\n              <FontAwesomeIcon\n                id='mood'\n                icon={smile}\n                size='2x'\n                onClick={() => this.setMood(4)}\n              />\n              <FontAwesomeIcon\n                id='mood'\n                icon={happiest}\n                size='2x'\n                onClick={() => this.setMood(5)}\n              />\n            </div>\n          </div>\n          <div className='create-productivity-box'>\n            <label htmlFor='productivity'>\n              How productive do you think you were today?{' '}\n              <span className='one-through-five-box'>\n                <b>{this.state.productivity}</b>\n              </span>\n            </label>\n            <br />\n            <div className='one-through-five' onClick={this.handleChange}>\n              <span id='productivity'>1</span>\n              <span id='productivity'>2</span>\n              <span id='productivity'>3</span>\n              <span id='productivity'>4</span>\n              <span id='productivity'>5</span>\n            </div>\n          </div>\n          <div>\n            <label htmlFor='journal'>\n              What were some of your thoughts about today?\n            </label>\n            <textarea\n              type='textbox'\n              name='journal'\n              id='journal'\n              rows='6'\n              cols='48'\n              maxLength='250'\n              placeholder='max length 250 characters'\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='privateJournal'>Make this a private Log:</label>\n            <input\n              type='checkbox'\n              name='privateJournal'\n              checked={this.state.privateJournal}\n              onChange={() => {\n                this.setState({\n                  privateJournal: !this.state.privateJournal\n                });\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor='hideCreator'>Hide your status as creator:</label>\n            <input\n              type='checkbox'\n              name='hideCreator'\n              checked={this.state.hideCreator}\n              onChange={() => {\n                this.setState({\n                  hideCreator: !this.state.hideCreator\n                });\n              }}\n            />\n            <p>\n              (Note: people will still see the contents of this log, they just\n              will be unable to know you created it)\n            </p>\n          </div>\n          <button className='create-log-button' onClick={this.handleSubmit}>\n            Log It\n          </button>\n          <br></br>\n          <b className={this.state.messageCss}>{this.state.message}</b>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default function StateFilter(props) {\n  return (\n    <div>\n      <select name='state' onChange={props.filter}>\n        <option selected>Filter by State:</option>\n        {props.states.map((state, key) => {\n          return (\n            <option key={key} value={state}>\n              {state}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function CountyFilter(props) {\n  return (\n    <div>\n      <select name='county' onChange={props.filter}>\n        <option selected>Filter by County:</option>\n        {props.counties.map((county, key) => {\n          return (\n            <option key={key} value={county}>\n              {county}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function WeatherAvg(props) {\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n  let mood = [];\n  let productivity = [];\n  if (props.logs.length > 0) {\n    props.logs.forEach(log => {\n      mood.push(log.mood);\n      productivity.push(log.productivity);\n    });\n    mood = Math.round(100 * (mood.reduce(reducer) / props.logs.length)) / 100;\n    productivity =\n      Math.round(100 * (productivity.reduce(reducer) / props.logs.length)) /\n      100;\n  } else {\n    mood = 0;\n    productivity = 0;\n  }\n\n  return (\n    <div>\n      <span className='weather-average-header'>\n        <span>{props.weather}:</span> <span>{mood}</span>{' '}\n        <span>{productivity}</span>\n      </span>\n    </div>\n  );\n}\n","import React from 'react';\nimport WeatherAvg from './WeatherAvg';\n\nexport default function WeatherAudit(props) {\n  let clear = [];\n  let clouds = [];\n  let rain = [];\n  let snow = [];\n  let outlier = [];\n\n  props.logs.map(log => {\n    switch (log.weatherType) {\n      case 'Clear':\n        clear.push(log);\n        break;\n      case 'Clouds':\n      case 'Mist':\n        clouds.push(log);\n        break;\n      case 'Snow':\n        snow.push(log);\n        break;\n      case 'Rain':\n      case 'Drizzle':\n      case 'Thunderstorm':\n        rain.push(log);\n        break;\n      default:\n        outlier.push(log);\n        break;\n    }\n    return log;\n  });\n\n  return (\n    <div className='weather-audit'>\n      <span className='header'>\n        <span>Weather</span>\n        <span>Mood Average</span>\n        <span className='header-productivity'>Productivity Average</span>\n      </span>\n      <div className='weather-avg'>\n        <WeatherAvg weather={'Clear'} logs={clear} />\n        <WeatherAvg weather={'Clouds'} logs={clouds} />\n        <WeatherAvg weather={'Rain'} logs={rain} />\n        <WeatherAvg weather={'Snow'} logs={snow} />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport AuthService from './auth/auth-service';\nimport { Link } from 'react-router-dom';\nimport DatePicker from 'react-date-picker';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faGenderless as nonbinary,\n  faVenus as female,\n  faMars as male\n} from '@fortawesome/free-solid-svg-icons';\n\nimport StateFilter from './fiterByLocation/StateFilter';\nimport CountyFilter from './fiterByLocation/CountyFilter';\nimport WeatherAudit from './weather/WeatherAudit';\n\nexport default class View extends Component {\n  state = {\n    today: new Date(),\n    date: new Date(),\n    logs: null,\n    filteredLogs: null,\n    filteredLogsCopy: null,\n    genderSearchMessage: null,\n    yours: false,\n    id: null,\n    day: null,\n    year: null,\n    states: [],\n    counties: [],\n    state: undefined,\n    stateFiltered: false,\n    county: undefined\n  };\n\n  service = new AuthService();\n\n  //NEW WAY\n  componentDidMount() {\n    this.sanitizeDate(this.state.today);\n  }\n\n  sanitizeDate = (dateToLookFor, message) => {\n    var start = new Date(dateToLookFor.getFullYear(), 0, 0);\n    var diff =\n      dateToLookFor -\n      start +\n      (start.getTimezoneOffset() - dateToLookFor.getTimezoneOffset()) *\n        60 *\n        1000;\n    var oneDay = 1000 * 60 * 60 * 24;\n    var day = Math.floor(diff / oneDay);\n    let a = dateToLookFor.toString().split(' ');\n    let year = a[3];\n\n    this.service\n      .getDate(year, day)\n      .then(results => {\n        const states = results.specificDay.map(log => {\n          return log.state;\n        });\n\n        this.setState({\n          logs: results.specificDay,\n          filteredLogs: results.specificDay,\n          filteredLogsCopy: results.specificDay,\n          genderSearchMessage: null,\n          yours: results.yours,\n          id: results.id,\n          states: [...new Set(states)],\n          counties: []\n        });\n      })\n      .catch(error => console.log(error));\n  };\n\n  filterByState = () => {\n    let stateLogs = this.state.logs.filter(log => {\n      return log.state === this.state.state;\n    });\n\n    let counties = new Set();\n\n    stateLogs.map(log => {\n      return counties.add(log.county);\n    });\n\n    this.setState({\n      filteredLogs: stateLogs,\n      counties: [...counties],\n      genderSearchMessage: null\n    });\n  };\n\n  filterByCounty = () => {\n    let countyLogs = this.state.logs.filter(log => {\n      return log.county === this.state.county;\n    });\n\n    this.setState({\n      filteredLogs: countyLogs,\n      genderSearchMessage: null\n    });\n  };\n\n  // HERE\n\n  filterByGender = e => {\n    let genderLogs = this.state.filteredLogsCopy.filter(log => {\n      return log.creatorId.gender === e.target.value;\n    });\n    this.setState({\n      filteredLogs: genderLogs,\n      genderSearchMessage: `Showing all ${e.target.value} logs`\n    });\n  };\n\n  showLogs = () => {\n    if (this.state.filteredLogs.length < 1 && this.state.today === new Date()) {\n      return (\n        <div>\n          No one has created a log today.{' '}\n          <Link to='/create'>Why not be the first?</Link>\n        </div>\n      );\n    } else if (this.state.filteredLogs.length < 1) {\n      return (\n        <div>\n          <h2>There were no logs recorded on this day...</h2>\n        </div>\n      );\n    } else {\n      return this.state.filteredLogs.map((log, key) => {\n        let weatherString;\n        let genderIcon;\n        //AS OF NOW, THE ICONS WILL ONLY SHOW THE DAYTIME IMAGES, FOR SIMPLICITY. THIS CAN BE CHANGED AT THE WEATHERSTRING VARIABLE\n        if (log.weatherIcon) {\n          weatherString = `https://openweathermap.org/img/wn/${log.weatherIcon.slice(\n            0,\n            -1\n          )}d@2x.png`;\n        } else weatherString = '';\n        let theTag = (\n          <Link to={`/view-profile/${log.creatorId._id}`}>\n            {log.creatorId.username}\n          </Link>\n        );\n        if (\n          log.creatorId.username ===\n            'This user has decided to keep their name private' ||\n          this.state.id === log.creatorId._id ||\n          log.creatorId.username === 'Deleted' ||\n          log.creatorId.hideProfile\n        ) {\n          theTag = log.creatorId.username;\n        }\n\n        switch (log.creatorId.gender) {\n          case 'male':\n            genderIcon = male;\n            break;\n          case 'female':\n            genderIcon = female;\n            break;\n          default:\n            genderIcon = nonbinary;\n            break;\n        }\n        return (\n          <div className='log' key={key}>\n            <div className='log-head '>\n              <span>\n                <h3 className='name-and-gender'>\n                  <div className='name-box'>\n                    {this.state.id === log.creatorId._id ? (\n                      <i>~(You!)~</i>\n                    ) : (\n                      theTag\n                    )}\n                  </div>\n                  <div className='gender'>\n                    <FontAwesomeIcon icon={genderIcon} size='2x' />\n                  </div>\n                  <div className='weather-box'>\n                    <span>\n                      <img\n                        className='weather-icon'\n                        src={weatherString}\n                        alt={log.weatherType}\n                      />\n                    </span>\n                    <p> {log.weatherType}</p>\n                  </div>\n                </h3>\n                {log.creatorId.username !==\n                  'This user has decided to keep their name private' &&\n                  log.hideCreator && (\n                    <i>You have hidden your name for this log</i>\n                  )}\n              </span>\n            </div>\n\n            <h2>\n              {log.county} County, {log.state}\n            </h2>\n            <div className='mood-and-productivity'>\n              <h3>\n                Mood: <p>{log.mood}</p>\n              </h3>\n              <h3>\n                Productivity: <p>{log.productivity}</p>\n              </h3>\n            </div>\n            <h4>Log: {log.journal}</h4>\n            {log.journal !== 'This log is set to private' &&\n              log.privateJournal && <i>You made this log private</i>}\n          </div>\n        );\n      });\n    }\n  };\n\n  onChange = date => {\n    if (date) {\n      this.setState({ date }, this.sanitizeDate(date, 'NEW DATE'));\n    }\n  };\n\n  filterState = e => {\n    if (e.target.value !== 'Filter by State:') {\n      this.setState(\n        {\n          [e.target.name]: e.target.value\n        },\n        () => {\n          this.filterByState();\n        }\n      );\n    }\n  };\n\n  filterCounty = e => {\n    if (e.target.value !== 'Filter by County:') {\n      this.setState(\n        {\n          [e.target.name]: e.target.value\n        },\n        () => {\n          this.filterByCounty();\n        }\n      );\n    }\n  };\n\n  weatherAudit = () => {\n    return <WeatherAudit logs={this.state.filteredLogs} />;\n  };\n\n  defaultLogs = () => {\n    this.setState({\n      states: [],\n      counties: [],\n      state: undefined,\n      stateFiltered: false,\n      county: undefined\n    });\n    this.sanitizeDate(this.state.today);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='view-header top-push'>\n          <div>\n            <h1>THESE ARE TODAYS LOGS:</h1>\n            {!this.props.createdToday && this.props.loggedInUser && (\n              <div className='create-log-link'>\n                You haven't created a log today.{' '}\n                <Link to='/create'>Make one now!</Link>\n              </div>\n            )}\n          </div>\n          {this.state.filteredLogs && this.weatherAudit()}\n        </div>\n        <div className='filter-box'>\n          <div className='gender-filter'>\n            Filter By Gender:\n            <br />\n            <button onClick={this.filterByGender} value='male'>\n              male\n            </button>\n            <button onClick={this.filterByGender} value='female'>\n              female\n            </button>\n            <button onClick={this.filterByGender} value='nonbinary'>\n              non-binary\n            </button>\n            <br />\n            {this.state.genderSearchMessage}\n          </div>\n          <div>\n            Search Logs By Day:\n            <br />\n            <DatePicker onChange={this.onChange} value={this.state.date} />\n          </div>\n          <div>\n            Filter By State:\n            <br />\n            <StateFilter states={this.state.states} filter={this.filterState} />\n          </div>\n          <div>\n            Filter By County:\n            <br />\n            <CountyFilter\n              counties={this.state.counties}\n              filter={this.filterCounty}\n            />\n          </div>\n          <div>\n            <button className='view-default-logs' onClick={this.defaultLogs}>\n              Back to Default\n            </button>\n          </div>\n        </div>\n\n        <div className='log-box'>\n          {this.state.filteredLogs && this.showLogs()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from './auth/auth-service';\nimport { Link } from 'react-router-dom';\nimport WeatherAudit from './weather/WeatherAudit';\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n// import { faCog as cog } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Profile extends Component {\n  state = {\n    user: null,\n    rawLogs: null,\n    logs: null,\n    moodAvg: [],\n    mood: 0,\n    notToday: false,\n    block: false,\n    oldestFirst: false\n  };\n\n  service = new AuthService();\n\n  componentDidMount() {\n    this.service\n      .profile()\n      .then(results => {\n        this.makeTheLogs(results);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  makeTheLogs = results => {\n    let today = new Date();\n    var start = new Date(today.getFullYear(), 0, 0);\n    var diff =\n      today -\n      start +\n      (start.getTimezoneOffset() - today.getTimezoneOffset()) * 60 * 1000;\n    var oneDay = 1000 * 60 * 60 * 24;\n    var day = Math.floor(diff / oneDay);\n\n    let a = today.toString().split(' ');\n    let year = a[3];\n    if (results.length < 1) {\n      this.setState({\n        logs: (\n          <div>\n            You haven't created a log yet!{' '}\n            <Link to='/create'>Make one now!</Link>\n          </div>\n        ),\n        block: true\n      });\n    } else {\n      const reducer = (accumulator, currentValue) => accumulator + currentValue;\n      let moodArr = [];\n      let theLogs = results.map((log, key) => {\n        moodArr.push(log.mood);\n        let weatherString;\n        if (log.weatherIcon) {\n          weatherString = `http://openweathermap.org/img/wn/${log.weatherIcon.slice(\n            0,\n            -1\n          )}d@2x.png`;\n        } else weatherString = '';\n        return (\n          <div key={key} className='log'>\n            <div className='profile-log-head'>\n              <div>\n                <span className='profile-date'>\n                  <span>{log.month}</span> <span>{log.dayOfMonth}</span>\n                  {', '}\n                  <span>{log.year}</span>\n                </span>\n                <h2>\n                  {log.county} County, {log.state}\n                </h2>\n              </div>\n              <div className='weather-box weather-box-profile'>\n                <span>\n                  <img\n                    className='weather-icon'\n                    src={weatherString}\n                    alt={log.weatherType}\n                  />\n                </span>\n                <p> {log.weatherType}</p>\n              </div>\n            </div>\n\n            <div className='mood-and-productivity'>\n              <h3>\n                Mood: <p>{log.mood}</p>\n              </h3>\n              <h3>\n                Productivity: <p>{log.productivity}</p>\n              </h3>\n            </div>\n            <h3>Log: {log.journal}</h3>\n            {log.hideCreator && <i>You have hidden your name for this log</i>}\n            <br />\n            {log.privateJournal && (\n              <i>You have hidden this journal from public viewing</i>\n            )}\n          </div>\n        );\n      });\n      let mood =\n        Math.round(100 * (moodArr.reduce(reducer) / moodArr.length)) / 100;\n\n      this.setState({\n        rawLogs: results,\n        logs: theLogs,\n        mood: mood\n      });\n      let dailyLog = results.filter(log => {\n        return log.dayOfYear === day && log.year === Number(year);\n      });\n      if (dailyLog.length < 1) {\n        this.setState({\n          notToday: true\n        });\n      }\n    }\n  };\n\n  sortByAge = () => {\n    let sortedLogs;\n    if (this.state.oldestFirst) {\n      sortedLogs = this.state.rawLogs.sort((a, b) =>\n        a.year > b.year ? 1 : -1\n      );\n      sortedLogs = this.state.rawLogs.sort((a, b) =>\n        a.dayOfYear > b.dayOfYear ? 1 : -1\n      );\n    } else {\n      sortedLogs = this.state.rawLogs.sort((a, b) =>\n        a.year < b.year ? 1 : -1\n      );\n      sortedLogs = this.state.rawLogs.sort((a, b) =>\n        a.dayOfYear < b.dayOfYear ? 1 : -1\n      );\n    }\n\n    this.setState(\n      prevState => ({\n        oldestFirst: !prevState.oldestFirst\n      }),\n      this.makeTheLogs(sortedLogs)\n    );\n  };\n\n  render() {\n    return (\n      <div className='top-push'>\n        <h1>Your Profile Page</h1>\n        {this.state.notToday && (\n          <h1>\n            <b>\n              You have not created a mood log today!{' '}\n              <Link to='/create'>Create one now!</Link>\n            </b>\n          </h1>\n        )}\n        <div className='profile-mood-box'>\n          <h2>Overall Happiness: {this.state.mood}</h2>\n          {this.state.logs && !this.state.block && (\n            <WeatherAudit logs={this.state.rawLogs} />\n          )}\n        </div>\n        <div className='sort-by-age-box'>\n          <button className='sort-by-age' onClick={this.sortByAge}>\n            Show {this.state.oldestFirst ? 'oldest' : 'newest'} first\n          </button>\n        </div>\n        <br></br>\n        <div className='log-box'>{this.state.logs}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from './auth/auth-service';\nimport WeatherAudit from './weather/WeatherAudit';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  faGenderless as nonbinary,\n  faVenus as female,\n  faMars as male\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default class ViewProfile extends Component {\n  state = {\n    user: null,\n    rawLogs: null,\n    logs: null,\n    moodAvg: [],\n    mood: 0,\n    name: null,\n    oldestFirst: false\n  };\n\n  service = new AuthService();\n\n  componentDidMount() {\n    this.service\n      .seeUser(this.props.match.params.id)\n      .then(results => {\n        this.makeTheLogs(results);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  makeTheLogs = results => {\n    if (results.length < 1) {\n      this.setState({\n        logs: <div>They haven't created any logs...</div>\n      });\n    } else {\n      const reducer = (accumulator, currentValue) => accumulator + currentValue;\n      let moodArr = [];\n      let name;\n      let genderIcon;\n\n      let theLogs = results.map((log, key) => {\n        switch (log.creatorId.gender) {\n          case 'male':\n            genderIcon = male;\n            break;\n          case 'female':\n            genderIcon = female;\n            break;\n          default:\n            genderIcon = nonbinary;\n            break;\n        }\n\n        let weatherString;\n        if (!name) name = log.creatorId.username;\n        moodArr.push(log.mood);\n        if (log.weatherIcon) {\n          weatherString = `http://openweathermap.org/img/wn/${log.weatherIcon.slice(\n            0,\n            -1\n          )}d@2x.png`;\n        } else weatherString = '';\n\n        return (\n          <div key={key} className='log'>\n            <div className='profile-log-head'>\n              <div>\n                <span className='profile-date'>\n                  <span>{log.month}</span> <span>{log.dayOfMonth}</span>\n                  {', '}\n                  <span>{log.year}</span>\n                </span>\n                <h2>\n                  {log.county}, {log.state}\n                </h2>\n              </div>\n              <div className='weather-box weather-box-profile'>\n                <span>\n                  <img\n                    className='weather-icon'\n                    src={weatherString}\n                    alt={log.weatherType}\n                  />\n                </span>\n                <p> {log.weatherType}</p>\n              </div>\n            </div>\n\n            <div className='mood-and-productivity'>\n              <h3>\n                Mood: <p>{log.mood}</p>\n              </h3>\n              <h3>\n                Productivity: <p>{log.productivity}</p>\n              </h3>\n            </div>\n            <h3>Log: {log.journal}</h3>\n          </div>\n        );\n      });\n      let mood =\n        Math.round(100 * (moodArr.reduce(reducer) / moodArr.length)) / 100;\n\n      this.setState({\n        rawLogs: results,\n        logs: theLogs,\n        mood: mood,\n        name: name,\n        gender: genderIcon\n      });\n    }\n  };\n\n  sortByAge = () => {\n    let sortedLogs;\n    if (this.state.oldestFirst) {\n      sortedLogs = this.state.rawLogs.sort((a, b) =>\n        a.year > b.year ? 1 : -1\n      );\n      sortedLogs = this.state.rawLogs.sort((a, b) =>\n        a.dayOfYear > b.dayOfYear ? 1 : -1\n      );\n    } else {\n      sortedLogs = this.state.rawLogs.sort((a, b) =>\n        a.year < b.year ? 1 : -1\n      );\n      sortedLogs = this.state.rawLogs.sort((a, b) =>\n        a.dayOfYear < b.dayOfYear ? 1 : -1\n      );\n    }\n    this.setState(\n      prevState => ({\n        oldestFirst: !prevState.oldestFirst\n      }),\n      this.makeTheLogs(sortedLogs)\n    );\n  };\n\n  render() {\n    return (\n      <div className='top-push'>\n        <h1>This is {this.state.name}'s page</h1>\n        <div className='profile-mood-box'>\n          <h2 className='view-profile-overall-happiness'>\n            {this.state.name}'s Overall Happiness: {this.state.mood}\n          </h2>\n          <FontAwesomeIcon icon={this.state.gender} size='3x' />\n          {this.state.logs && <WeatherAudit logs={this.state.rawLogs} />}\n        </div>\n        {/* <button className='sort-by-age' onClick={this.sortByAge}>\n          Show {this.state.oldestFirst ? 'oldest' : 'newest'} first\n        </button> */}\n        <div className='sort-by-age-box'>\n          <button className='sort-by-age' onClick={this.sortByAge}>\n            Show {this.state.oldestFirst ? 'oldest' : 'newest'} first\n          </button>\n        </div>\n        <br></br>\n        <div className='log-box'>{this.state.logs}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../css/navbar.css';\n\nexport default function Navbar(props) {\n  return (\n    <div className='navbar'>\n      <h2 className='logged-in-user'>{props.info.message}</h2>\n      <div className='nav-links'>\n        {!props.info.loggedInUser && (\n          <div className='yeet'>\n            <Link to='/'>Home</Link>\n          </div>\n        )}\n        {props.info.loggedInUser && (\n          <div>\n            <Link to='/profile'>Profile</Link>\n          </div>\n        )}\n        {props.info.loggedInUser && !props.info.createdLogToday && (\n          <div>\n            <Link to='/create'>Create</Link>\n          </div>\n        )}\n        <div>\n          <Link to='/view'>View</Link>\n        </div>\n        {props.info.loggedInUser && (\n          <div>\n            <Link to='/settings'>Settings</Link>\n          </div>\n        )}\n        {props.info.loggedInUser && <Link to='/logout'>Logout</Link>}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Login from './components/account/Login';\nimport Logout from './components/account/Logout';\nimport Signup from './components/account/Signup';\nimport Settings from './components/account/Settings';\nimport Create from './components/Create';\nimport View from './components/View';\nimport Profile from './components/Profile';\nimport ViewProfile from './components/ViewProfile';\nimport Navbar from './components/Navbar';\n\nimport AuthService from './components/auth/auth-service';\n\nimport './App.css';\nimport './css/homepage.css';\n\nclass App extends React.Component {\n  state = {\n    loggedInUser: null,\n    message: 'Not logged in',\n    createdLogToday: false,\n    errMessage: null\n  };\n\n  service = new AuthService();\n\n  componentDidMount() {\n    if (!this.state.loggedInUser) {\n      this.isLoggedIn();\n    }\n  }\n\n  testIt = thing => {\n    console.log('TESTHING THING');\n    return typeof thing === 'string' ? true : false;\n  };\n\n  setNewState = results => {\n    this.setState({\n      loggedInUser: results\n    });\n  };\n\n  isLoggedIn = () => {\n    console.log('isLoggedIn was just called');\n    this.service\n      .loggedin()\n      .then(response => {\n        this.setState(\n          {\n            loggedInUser: response,\n            message: `Hello, ${response.username}!`,\n            createdLogToday: response.createdToday\n          },\n          () => console.log('THE NEW STATE', this.state)\n        );\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  };\n\n  setUser = () => {\n    let storedUser = JSON.parse(localStorage.getItem('user'));\n    this.setState({\n      username: storedUser.username,\n      message: `Hello ${storedUser.username}`\n    });\n  };\n\n  setError = err => {\n    this.setState({\n      errMessage: err\n    });\n  };\n\n  logCreated = () => {\n    console.log('logCreated has been called');\n    this.setState({\n      createdLogToday: true\n    });\n  };\n\n  logout = () => {\n    this.setState({\n      loggedInUser: null,\n      message: 'Have a great day!'\n    });\n    localStorage.removeItem('user');\n  };\n\n  getTheUser = userObj => {\n    console.log('getTheUser was called');\n    this.setState(\n      {\n        loggedInUser: userObj,\n        message: `Hello, ${userObj.username}!`,\n        createdLogToday: userObj.createdToday\n      },\n      () => {\n        console.log('NEW STATE', this.state);\n      }\n    );\n  };\n\n  render() {\n    // if (this.state.loggedInUser) {\n    //   return <Redirect to='/profile' />;\n    // }\n    return (\n      <div>\n        <div className='App'>\n          <Navbar\n            info={this.state}\n            logout={this.logout}\n            history={this.history}\n          />\n        </div>\n        <Switch>\n          <Route\n            exact\n            path='/'\n            render={props => (\n              <Home\n                {...props}\n                err={this.state.errMessage}\n                setError={this.setError}\n                getUser={this.getTheUser}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/signup'\n            render={props => (\n              <Signup\n                {...props}\n                testIt={this.testIt}\n                getUser={this.getTheUser}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/login'\n            render={props => (\n              <Login\n                {...props}\n                testIt={this.testIt}\n                getUser={this.getTheUser}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/profile'\n            render={props => (\n              <Profile {...props} user={this.state.loggedInUser} />\n            )}\n          />\n          <Route\n            exact\n            path='/logout'\n            render={props => (\n              <Logout\n                {...props}\n                logout={this.logout}\n                user={this.state.loggedInUser}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/create'\n            render={props => (\n              <Create\n                {...props}\n                logCreated={this.logCreated}\n                user={this.state.loggedInUser}\n                createdToday={this.state.createdLogToday}\n                setError={this.setError}\n                testIt={this.testIt}\n              />\n            )}\n          />\n          <Route\n            path='/view'\n            render={props => (\n              <View\n                {...props}\n                createdToday={this.state.createdLogToday}\n                loggedInUser={this.state.loggedInUser}\n              />\n            )}\n          />\n          <Route\n            path='/settings'\n            render={props => (\n              <Settings\n                {...props}\n                loggedInUser={this.state.loggedInUser}\n                isLoggedIn={this.isLoggedIn}\n              />\n            )}\n          />\n          <Route\n            path='/view-profile/:id'\n            render={props => <ViewProfile {...props} setUser={this.setUser} />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}